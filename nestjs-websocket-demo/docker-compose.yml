version: '3.8'

services:
  # NestJS Application
  api:
    build: .
    ports:
      - '3000:3000'
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      - MONGODB_URL=mongodb://mongo1:27017,mongo2:27018,mongo3:27019/nestjs_websocket?replicaSet=rs0
    networks:
      - app-network

  # MongoDB Replica Set
  mongo1:
    image: mongo:latest
    command: mongod --replSet rs0 --port 27017 --bind_ip 0.0.0.0
    ports:
      - '27017:27017'
    volumes:
      - mongo1-data:/data/db
    networks:
      - app-network

  mongo2:
    image: mongo:latest
    command: mongod --replSet rs0 --port 27018 --bind_ip 0.0.0.0
    ports:
      - '27018:27018'
    volumes:
      - mongo2-data:/data/db
    networks:
      - app-network

  mongo3:
    image: mongo:latest
    command: mongod --replSet rs0 --port 27019 --bind_ip 0.0.0.0
    ports:
      - '27019:27019'
    volumes:
      - mongo3-data:/data/db
    networks:
      - app-network

  # MongoDB Replica Set Initializer
  mongo-init:
    image: mongo:latest
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      bash -c "
        echo 'Waiting for MongoDB to start...' &&
        sleep 10 &&
        mongosh --host mongo1:27017 --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [
              {_id: 0, host: \"mongo1:27017\"},
              {_id: 1, host: \"mongo2:27018\"},
              {_id: 2, host: \"mongo3:27019\"}
            ]
          })
        '"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
